<?xml version="1.0" ?>
<project name="Chatsworth" default="test" xmlns="http://nant.sf.net/schemas/nant.xsd">
	<property name="build.dir" value="build" />
	<property name="nant.settings.currentframework" value="net-3.5" />
	<property name="corflags.dir" value="C:\Program Files\Microsoft SDKs\Windows\v6.0A\Bin"/>
	<property name="x64libs.dir" value="lib\x64" />
	<property name="sqlitedb.dir" value="src\Core\Db" />
	<property name="msi.dir" value="${build.dir}\msi" />
	<property name="devenv.dir" value="C:\Program Files (x86)\Microsoft Visual Studio 9.0\Common7\IDE\" />
	
	
	<!-- User targets -->
	<target name="clean" description="Delete Automated Build artifacts">
		<delete dir="${build.dir}" if="${directory::exists(build.dir)}"/>
	</target>

	<target name="compile" description="Compiles using the AutomatedDebug Configuration">
		<msbuild project="src\Chatsworth.sln">
			<property name="Configuration" value="AutomatedDebug" />
		</msbuild>
	</target>

	<target name="release-compile" description="Compiles using the Release Configuration and builds MSI">
		<property name="msi-file-name" value="${msi.dir}\ChatsworthInstaller.msi" />
		<mkdir dir="${msi.dir}\log" />
		<exec failonerror="false" basedir="${devenv.dir}"
		program="devenv.exe" commandline="src\Chatsworth.sln /build Release /project ChatsworthInstaller /out ${msi.dir}\log\msi.log" /> 
		<fail if="${not file::exists(msi-file-name)}">The MSI failed to build. See log\msi.log for more details.</fail>
	</target>
	
	<target name="test" depends="compile, run-unit-tests" description="Compile and Run Tests" />
	
	<target name="full" depends="clean, release-compile" description="Compiles and produces distributions" />

	<!-- Internal targets -->
	<target name="run-unit-tests">
		<mkdir dir="${build.dir}\test-reports" />
		<copy file="${sqlitedb.dir}\chatsworthdb.s3db" tofile="${build.dir}\Debug\UnitTests\chatsworthdb.s3db" />
		<copy file="${x64libs.dir}\System.Data.SQLite.dll" tofile="${build.dir}\Debug\UnitTests\System.Data.SQLite.dll" />
		<exec program="regsvr32" workingdir="tools\NCover" commandline="/s CoverLib.dll" />
		<!-- Need the CorFlags Commands For x64 -->
		<exec program="${corflags.dir}\CorFlags" workingdir="tools\NCover" commandline="NCover.Console.exe /32BIT+" />
		<exec program="${corflags.dir}\CorFlags" workingdir="tools\Machine.Specifications" commandline="Machine.Specifications.ConsoleRunner.exe /32BIT+" />
		<exec program="tools\ncover\NCover.Console.exe" 
			workingdir="${build.dir}\Debug\UnitTests">
			<arg value="//w &quot;.&quot;" />
			<arg value="//x &quot;..\..\test-reports\Coverage.xml&quot;" /><arg value="&quot;..\..\..\tools\Machine.Specifications\Machine.Specifications.ConsoleRunner.exe&quot;" />
			<arg value="Chatsworth.UnitTests.dll" />
		</exec>
	</target>
	
	<target name="dist">
		<copy todir="${build.dir}\dist">
			<fileset basedir="${build.dir}\Debug\Chatsworth">
				<include name="**\*"/>
				<exclude name="**\*.pdb" />
			</fileset>
		</copy>
		<zip zipfile="${build.dir}\Chatsworth.zip">
			<fileset basedir="${build.dir}\dist">
				<include name="**\*" />
			</fileset>
		</zip>
	</target>
	
</project>

