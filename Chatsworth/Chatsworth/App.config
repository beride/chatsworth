<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
      <section name="Chatsworth.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false"/>
      </sectionGroup>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <userSettings>
    <Chatsworth.Properties.Settings>
      <setting name="Server" serializeAs="String">
        <value>gmail.com</value>
      </setting>
      <setting name="ConnectServer" serializeAs="String">
        <value>talk.google.com</value>
      </setting>
      <setting name="Username" serializeAs="String">
        <value />
      </setting>
      <setting name="Password" serializeAs="String">
        <value />
      </setting>
    </Chatsworth.Properties.Settings>
  </userSettings>
  <unity>
    <typeAliases>
      <typeAlias alias="singleton"
           type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity"/>
      <typeAlias alias="string" type="System.String, mscorlib" />
      <typeAlias alias="IPersistenceProvider" type="ChatsworthLib.DataAccess.IPersistenceProvider, ChatsworthLib" />
      <typeAlias alias="XmlPersistenceProvider" type="ChatsworthLib.DataAccess.XmlPersistenceProvider, ChatsworthLib" />
      <typeAlias alias="ICommunicator" type="ChatsworthLib.ICommunicator, ChatsworthLib" />
      <typeAlias alias="MessageProcessor" type="ChatsworthLib.MessageProcessor, ChatsworthLib" />
      <typeAlias alias="IMessageProcessor" type="ChatsworthLib.IMessageProcessor, ChatsworthLib" />
      <typeAlias alias="ChatController" type="ChatsworthLib.ChatController, ChatsworthLib" />
      <typeAlias alias="ChatMessageHandler" type="ChatsworthLib.MessageHandlers.ChatMessageHandler, ChatsworthLib" />
      <typeAlias alias="CommandMessageHandler" type="ChatsworthLib.MessageHandlers.CommandMessageHandler, ChatsworthLib" />
      <typeAlias alias="IMessageHandler" type="ChatsworthLib.MessageHandlers.IMessageHandler, ChatsworthLib" />
      <typeAlias alias="IMessageHandlerArray" type="ChatsworthLib.MessageHandlers.IMessageHandler[], ChatsworthLib" />
      <typeAlias alias="ICommand" type="ChatsworthLib.Commands.ICommand, ChatsworthLib" />
      <typeAlias alias="ICommandArray" type="ChatsworthLib.Commands.ICommand[], ChatsworthLib" />
      <typeAlias alias="JoinCommand" type="ChatsworthLib.Commands.JoinCommand, ChatsworthLib" />
      <typeAlias alias="AliasCommand" type="ChatsworthLib.Commands.AliasCommand, ChatsworthLib" />
      <typeAlias alias="ListCommand" type="ChatsworthLib.Commands.ListCommand, ChatsworthLib" />
      <typeAlias alias="LeaveCommand" type="ChatsworthLib.Commands.LeaveCommand, ChatsworthLib" />
      <typeAlias alias="WhisperCommand" type="ChatsworthLib.Commands.WhisperCommand, ChatsworthLib" />
      <typeAlias alias="IMemberDirectory" type="ChatsworthLib.IMemberDirectory, ChatsworthLib" />
      <typeAlias alias="MemberDirectory" type="ChatsworthLib.MemberDirectory, ChatsworthLib" />
      <typeAlias alias="XMPPCommunicator" type="ChatsworthLib.XMPPCommunicator, ChatsworthLib" />
    </typeAliases>
    <containers>
      <container>
        <types>
          <type type="IPersistenceProvider" mapTo="XmlPersistenceProvider">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="storagePath" parameterType="string">
                  <value value=".\datastore.xml"/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IMemberDirectory"  mapTo="MemberDirectory">
            <lifetime type="singleton"/>
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="provider" parameterType="IPersistenceProvider">
                  <dependency />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ICommunicator" mapTo="XMPPCommunicator">
            <lifetime type="singleton" />
          </type>
          <type type="ICommand" mapTo="JoinCommand" name="joinCommand">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="communicator" parameterType="ICommunicator">
                  <dependency />
                </param>
                <param name="directory" parameterType="IMemberDirectory">
                  <dependency />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ICommand" mapTo="AliasCommand" name="aliasCommand">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="communicator" parameterType="ICommunicator">
                  <dependency />
                </param>
                <param name="directory" parameterType="IMemberDirectory">
                  <dependency />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ICommand" mapTo="ListCommand" name="listCommand">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="communicator" parameterType="ICommunicator">
                  <dependency />
                </param>
                <param name="directory" parameterType="IMemberDirectory">
                  <dependency />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ICommand" mapTo="LeaveCommand" name="leaveCommand">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="communicator" parameterType="ICommunicator">
                  <dependency />
                </param>
                <param name="directory" parameterType="IMemberDirectory">
                  <dependency />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ICommand" mapTo="WhisperCommand" name="whisperCommand">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="communicator" parameterType="ICommunicator">
                  <dependency />
                </param>
                <param name="directory" parameterType="IMemberDirectory">
                  <dependency />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IMessageHandler" mapTo="CommandMessageHandler" name="commandMessageHandler">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="commands" parameterType="ICommandArray">
                  <array>
                    <dependency name="joinCommand" />
                    <dependency name="aliasCommand" />
                    <dependency name="listCommand" />
                    <dependency name="leaveCommand" />
                    <dependency name="whisperCommand"/>
                  </array>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IMessageHandler" mapTo="ChatMessageHandler" name="chatMessageHandler">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="communicator" parameterType="ICommunicator">
                  <dependency />
                </param>
                <param name="directory" parameterType="MemberDirectory">
                  <dependency />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="IMessageProcessor" mapTo="MessageProcessor">
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="handlers" parameterType="IMessageHandlerArray">
                  <array>
                    <dependency name="commandMessageHandler"/>
                    <dependency name="chatMessageHandler"/>
                  </array>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ChatController">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="processor" parameterType="IMessageProcessor">
                  <dependency />
                </param>
                <param name="communicator" parameterType="ICommunicator">
                  <dependency />
                </param>
              </constructor>
            </typeConfig>
          </type>
        </types>
      </container>
    </containers>
  </unity>
</configuration>